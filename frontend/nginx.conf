worker_processes  5;
# worker_processes  1;

events {
  worker_connections  4096;
  # worker_connections  1024;
}

http {

  upstream kibana-server {
    server kibana:5601;
  }

  upstream elasticsearch-server {
    server elasticsearch:9200;
  }

  server {
    # Listen on 80 to do let's encrypt
    listen 80 default_server;
    server_name elkdreams-ai.com;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;	    # This is where the challenge will be sent
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    server_name elkdreams-ai.com;

    # Location of the certificates
    ssl_certificate /etc/letsencrypt/live/elkdreams-ai.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/elkdreams-ai.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Basic auth - expects user:password with curl command
    auth_basic "Ilya knows the password";
    auth_basic_user_file /etc/htpasswd;

    location / {

      proxy_pass http://kibana-server/;
      proxy_redirect     off;	# Do not rename the header field Location
      # Sets the text that should be changed in the “Location” and “Refresh” header fields of a proxied server response. Suppose a proxied server returned the	header field “Location: http://localhost:8000/two/some/uri/”. The directive # will rewrite this string to “Location: http://frontend/one/some/uri/”.
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;			#Address of the request
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;	#List of every single ip that was in the proxy chaing
      proxy_set_header   X-Forwarded-Host $server_name;			#Original host requested by the client
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }

    location ~ ^/ec {
      # Match anything sent to /ec[/someuri]
      # Then extract out [someuri] and rewrite it
      rewrite ^/ec/?(.*)$ /$1 break;
      proxy_pass http://elasticsearch-server;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }
  }
}
