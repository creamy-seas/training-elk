version: '3.4'
services:
  elasticsearch:
    build: elastic
    environment:
      - "ES_JAVA_OPTS=-Xms4096m -Xmx32768m"
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
      memlock:
        soft: -1
        hard: -1
    restart: always
    ports:
      - 8080:9200
    volumes:
      - /data/elasticsearch:/usr/share/elasticsearch/data
  logstash:
    build: logstash
    depends_on:
      - elasticsearch
    ports:
      - 8080:8080
    environment:
      - "LS_JAVA_OPTS=-Xms4096m -Xmx32768m"
    restart: always
  kibana:
    build: kibana
    depends_on:
      - elasticsearch
    restart: always
  frontend:
    build: frontend
    ports:
      - 80:80
      - 443:443
    depends_on:
      - kibana
      - elasticsearch
    # In the nginx section, you need to make sure that nginx reloads the newly obtained certificates:
    # Wait for 6 hours. $$ ensuers a literal dollar sign, {} is the general way to evaluate variables names
    # so $${!} == $! which is the last process id
    # Reload the nginx configuration
    # Turn daemon off so that nginx runs in the foreground
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; /usr/sbin/nginx -s reload; done & /usr/sbin/nginx -g \"daemon off;\"'"
    volumes:
      - /data/certbot/conf:/etc/letsencrypt
      - /data/certbot/www:/var/www/certbot
    restart: always
  certbot:
    image: certbot/certbot
    # This will check if your certificate is up for renewal every 12 hours as recommended by Letâ€™s Encrypt.
    # trap line says that "exit" will be run whenever the process is terminated. For safety I guess
    # wait $${!} waits for the previous process to finish. ${!} gets the id of the last process
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - /data/certbot/conf:/etc/letsencrypt
      - /data/certbot/www:/var/www/certbot
